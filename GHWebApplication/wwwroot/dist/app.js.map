{"version":3,"sources":["webpack:///./ClientApp/app/data.service.ts","webpack:///./ClientApp/app/device.ts","webpack:///./ClientApp/main.ts","webpack:///./ClientApp/app/app.module.ts","webpack:///./ClientApp/app/app.component.ts","webpack:///./ClientApp/app/app.component.html","webpack:///./ClientApp/app/device-list.component.ts","webpack:///./ClientApp/app/device-list.component.html","webpack:///./ClientApp/app/device-form.component.ts","webpack:///./ClientApp/app/device-form.component.html","webpack:///./ClientApp/app/device-create.component.ts","webpack:///./ClientApp/app/device-create.component.html","webpack:///./ClientApp/app/device-edit.component.ts","webpack:///./ClientApp/app/device-edit.component.html","webpack:///./ClientApp/app/not-found.component.ts","webpack:///./ClientApp/app/device-list-room.component.ts","webpack:///./ClientApp/app/device-list-room.component.html"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAA2C;AACO;AAIlD;IAKI,qBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAF5B,QAAG,GAAG,cAAc,CAAC;IAEW,CAAC;IAEzC,gCAAU,GAAV;QAEI,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;QAChC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,QAAQ,CAAC,CAAC;IAC9C,CAAC;IAED,+BAAS,GAAT,UAAU,EAAU;QAChB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,SAAS,GAAG,EAAE,CAAC,CAAC;IACpD,CAAC;IAED,oCAAc,GAAd,UAAe,IAAa,EAAE,QAAiB;QAC3C,0CAA0C;QAC1C,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,eAAe,GAAG,IAAI,GAAG,YAAY,GAAG,QAAQ,CAAC,CAAC;IACtF,CAAC;IAED,kCAAY,GAAZ,UAAa,MAAc;QAEvB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,QAAQ,EAAE,MAAM,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IAChF,CAAC;IAED,kCAAY,GAAZ,UAAa,MAAc;QAEvB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,SAAS,GAAG,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;IACnE,CAAC;IAED,kCAAY,GAAZ,UAAa,EAAU;QAEnB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,GAAG,SAAS,GAAG,EAAE,CAAC,CAAC;IACvD,CAAC;IAnCQ,WAAW;QADvB,iEAAU,EAAE;yCAMiB,gEAAU;OAL3B,WAAW,CAoCvB;IAAD,kBAAC;CAAA;AApCuB;;;;;;;;;;;;;;;;;;;;;ACLxB;IACI,0BAA0B;IAC1B,gBACW,EAAW,EACX,IAAa,EACb,OAAgB,EAChB,QAAiB,EACjB,IAAa,EACb,KAAe,EACf,IAAa;QANb,OAAE,GAAF,EAAE,CAAS;QACX,SAAI,GAAJ,IAAI,CAAS;QACb,YAAO,GAAP,OAAO,CAAS;QAChB,aAAQ,GAAR,QAAQ,CAAS;QACjB,SAAI,GAAJ,IAAI,CAAS;QACb,UAAK,GAAL,KAAK,CAAU;QACf,SAAI,GAAJ,IAAI,CAAS;QACpB,OAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC;QACzC,2CAA2C;QAC1C,wDAAwD;IAC3D,CAAC;IACL,aAAC;AAAD,CAAC;;AAED;IAAA;IAOA,CAAC;IANG,mCAAY,GAAZ,UAAa,IAAY;QACrB,IAAI,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QAC/B,KAAK,IAAI,QAAQ,IAAI,OAAO,EAAE;YAC1B,IAAI,CAAC,QAAQ,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC;SACrC;IACL,CAAC;IACL,mBAAC;AAAD,CAAC;;AAED;IAA0B,wBAAY;IAAtC;;IAQA,CAAC;IAAD,WAAC;AAAD,CAAC,CARyB,YAAY,GAQrC;;;;;;;;;;;;;;;;;;;;;;ACjC0E;AAC9B;AAC7C,IAAM,QAAQ,GAAG,iGAAsB,EAAE,CAAC;AAC1C,QAAQ,CAAC,eAAe,CAAC,kEAAS,CAAC,CAAC;AAEpC,4DAA4D;AAC5D,IAAI,IAAU,EAAE;IACZ,MAAM,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC;IACpB,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC;QACf,mFAAmF;QACnF,IAAM,WAAW,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAClD,IAAM,WAAW,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAClD,WAAY,CAAC,UAAW,CAAC,YAAY,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC;QAChE,QAAQ,CAAC,OAAO,EAAE,CAAC;IACvB,CAAC,CAAC,CAAC;CACN;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfwC;AACiB;AACb;AACW;AACD;AAER;AACe;AACA;AACI;AACJ;AACJ;AACa;AAE1B;AAE7C,wBAAwB;AACxB,IAAM,SAAS,GAAW;IACtB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,mFAAmB,EAAE;IAC5C,EAAE,IAAI,EAAE,kBAAkB,EAAE,SAAS,EAAE,6FAAuB,EAAE;IAChE,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,uFAAqB,EAAE;IACpD,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,mFAAmB,EAAE;IACpD,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,gFAAiB,EAAE;CAC/C,CAAC;AAUF;IAAA;IAAyB,CAAC;IAAb,SAAS;QARrB,+DAAQ,CAAC;YACN,OAAO,EAAE,CAAC,wEAAa,EAAE,2DAAW,EAAE,sEAAgB,EAAE,6DAAY,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;YACxF,YAAY,EAAE,CAAC,oEAAY,EAAE,mFAAmB,EAAE,uFAAqB,EAAE,mFAAmB;gBACxF,mFAAmB,EAAE,gFAAiB,EAAE,6FAAuB,CAAC;YACpE,SAAS,EAAE,CAAC,mEAAW,CAAC;YACxB,SAAS,EAAE,CAAC,oEAAY,CAAC;SAC5B,CAAC;OAEW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;ACjCoB;AAM1C;IAAA;IAA4B,CAAC;IAAhB,YAAY;QAJxB,gEAAS,CAAC;YACP,QAAQ,EAAE,KAAK;YACf,QAAQ,EAAE,mBAAO,CAAC,CAAsB,CAAC;SAC5C,CAAC;OACW,YAAY,CAAI;IAAD,mBAAC;CAAA;AAAJ;;;;;;;ACNzB,2G;;;;;;;;;;;;;;;;;;;ACAyD;AACZ;AAO7C;IAMI,6BAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAAI,CAAC;IAEjD,sCAAQ,GAAR;QACI,IAAI,CAAC,IAAI,EAAE,CAAC;QACZ,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QACxC,sEAAsE;QAEtE,GAAG;QACH,iDAAiD;QACjD,iCAAiC;QACjC,8CAA8C;QAC9C,GAAG;IACP,CAAC;IAGD,kCAAI,GAAJ;QAAA,iBAIC;QAHG,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;QAC5B,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,UAAC,IAAc,IAAK,YAAI,CAAC,OAAO,GAAG,IAAI,EAAnB,CAAmB,CAAC,CAAC;QACjF,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IAC9C,CAAC;IAED,oCAAM,GAAN,UAAO,EAAU;QAAjB,iBAEC;QADG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,cAAI,IAAI,YAAI,CAAC,IAAI,EAAE,EAAX,CAAW,CAAC,CAAC;IACrE,CAAC;IAzBQ;QAAR,4DAAK,EAAE;;qDAAc;IAJb,mBAAmB;QAJ/B,gEAAS,CAAC;YACP,QAAQ,EAAE,mBAAO,CAAC,EAA8B,CAAC;YACjD,SAAS,EAAE,CAAC,kEAAW,CAAC;SAC3B,CAAC;yCAOmC,kEAAW;OANnC,mBAAmB,CA8B/B;IAAD,0BAAC;CAAA;AA9B+B;;;;;;;ACRhC,qeAAqe,SAAS,gKAAgK,YAAY,iKAAiK,aAAa,sJAAsJ,SAAS,yKAAyK,UAAU,oMAAoM,UAAU,mcAAmc,MAAM,qTAAqT,SAAS,2TAA2T,YAAY,8GAA8G,aAAa,4GAA4G,SAAS,6GAA6G,UAAU,+GAA+G,SAAS,qV;;;;;;;;;;;;;;;;;;;ACAp2F;AACf;AAOlC;IAAA;IAEA,CAAC;IADY;QAAR,4DAAK,EAAE;kCAAS,uDAAM;uDAAC;IADf,mBAAmB;QAL/B,gEAAS,CAAC;YACP,QAAQ,EAAE,aAAa;YACvB,QAAQ,EAAE,mBAAO,CAAC,EAA8B,CAAC;SACpD,CAAC;OAEW,mBAAmB,CAE/B;IAAD,0BAAC;CAAA;AAF+B;;;;;;;ACRhC,y7B;;;;;;;;;;;;;;;;;;;;;ACA0C;AACD;AACI;AACX;AAKlC;IAGI,+BAAoB,WAAwB,EAAU,MAAc;QAAhD,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QADpE,WAAM,GAAW,IAAI,uDAAM,EAAE,CAAC,CAAI,qBAAqB;IACiB,CAAC;IACzE,oCAAI,GAAJ;QAAA,iBAEC;QADG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,cAAI,IAAI,YAAI,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,EAA9B,CAA8B,CAAC,CAAC;IACjG,CAAC;IANQ,qBAAqB;QAHjC,gEAAS,CAAC;YACP,QAAQ,EAAE,mBAAO,CAAC,EAAgC,CAAC;SACtD,CAAC;yCAImC,kEAAW,EAAkB,uDAAM;OAH3D,qBAAqB,CAOjC;IAAD,4BAAC;CAAA;AAPiC;;;;;;;ACRlC,mW;;;;;;;;;;;;;;;;;;;;ACAkD;AACO;AACZ;AAO7C;IAMI,6BAAoB,WAAwB,EAAU,MAAc,EAAE,WAA2B;QAA7E,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QAFpE,WAAM,GAAY,KAAK,CAAC;QAGpB,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC,QAAQ,CAAC,WAAW,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;IACjE,CAAC;IAED,sCAAQ,GAAR;QAAA,iBAOC;QANG,IAAI,IAAI,CAAC,EAAE;YACP,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC;iBAC9B,SAAS,CAAC,UAAC,IAAY;gBACpB,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;gBACnB,IAAI,KAAI,CAAC,MAAM,IAAI,IAAI;oBAAE,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YAChD,CAAC,CAAC,CAAC;IACf,CAAC;IAED,kCAAI,GAAJ;QAAA,iBAEC;QADG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,cAAI,IAAI,YAAI,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,EAA9B,CAA8B,CAAC,CAAC;IACjG,CAAC;IArBQ,mBAAmB;QAJ/B,gEAAS,CAAC;YACP,QAAQ,EAAE,mBAAO,CAAC,EAA8B,CAAC;SACpD,CAAC;yCAQmC,kEAAW,EAAkB,uDAAM,EAAe,+DAAc;OANxF,mBAAmB,CAsB/B;IAAD,0BAAC;CAAA;AAtB+B;;;;;;;ACThC,0W;;;;;;;;;;;;;;;ACA0C;AAK1C;IAAA;IAAiC,CAAC;IAArB,iBAAiB;QAH7B,gEAAS,CAAC;YACP,QAAQ,EAAE,6BAA6B;SAC1C,CAAC;OACW,iBAAiB,CAAI;IAAD,wBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;ACLoB;AACO;AACZ;AAS7C;IAKI,iCAAoB,WAAwB,EAAU,MAAc,EAAE,WAA2B;QAA7E,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QAChE,IAAI,CAAC,IAAI,GAAG,WAAW,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;IACpD,CAAC;IAED,0CAAQ,GAAR;QACI,IAAI,CAAC,IAAI,EAAE,CAAC;IAChB,CAAC;IAED,sCAAI,GAAJ;QAAA,iBAIC;QAHG,IAAI,IAAI,CAAC,IAAI;YACT,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC;iBACzC,SAAS,CAAC,UAAC,IAAc,IAAK,YAAI,CAAC,OAAO,GAAG,IAAI,EAAnB,CAAmB,CAAC,CAAC;IAChE,CAAC;IAjBQ,uBAAuB;QANnC,gEAAS,CACN;YACI,QAAQ,EAAE,mBAAO,CAAC,EAAmC,CAAC;YACtD,SAAS,EAAE,CAAC,kEAAW,CAAC;SAC3B,CAAC;yCAO+B,kEAAW,EAAkB,uDAAM,EAAe,+DAAc;OALxF,uBAAuB,CAkBnC;IAAD,8BAAC;CAAA;AAlBmC;;;;;;;ACXpC,qHAAqH,MAAM,uSAAuS,SAAS,2BAA2B,YAAY,2BAA2B,SAAS,oD","file":"app.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Device } from './device';\r\n\r\n@Injectable()\r\nexport class DataService\r\n{\r\n\r\n    private url = \"/api/device/\";\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getDevices()\r\n    {\r\n        console.log(\"метод getDevices\");\r\n        return this.http.get(this.url + \"GetAll\");\r\n    }\r\n\r\n    getDevice(id: number) {\r\n        return this.http.get(this.url + \"GetOne/\" + id);\r\n    }\r\n\r\n    getDevicesSort(room?: string, category?: string) {\r\n        //?параметр1=значение1&параметр2=значение2\r\n        return this.http.get(this.url + \"GetSort?room=\" + room + \"&category=\" + category);\r\n    }\r\n\r\n    createDevice(device: Device)\r\n    {\r\n        return this.http.post(this.url + \"AddNew\", device, { observe: 'response' });\r\n    }\r\n\r\n    updateDevice(device: Device)\r\n    {\r\n        return this.http.put(this.url + \"Update/\" + device.id, device);\r\n    }\r\n\r\n    deleteDevice(id: number)\r\n    {\r\n        return this.http.delete(this.url + \"Delete/\" + id);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./ClientApp/app/data.service.ts","export class Device {\r\n    //public infoClass?: Info;\r\n    constructor(\r\n        public id?: number,\r\n        public name?: string,\r\n        public company?: string,\r\n        public category?: string,\r\n        public room?: string,\r\n        public power?: boolean,\r\n        public info?: string) {\r\n        console.log(\"start parsing infoClass\");\r\n      //  this.infoClass.fillFromJSON(this.info);\r\n       // console.log(\"end parsing infoClass\", this.infoClass);\r\n    }\r\n}\r\n\r\nexport class Serializable {\r\n    fillFromJSON(json: string) {\r\n        var jsonObj = JSON.parse(json);\r\n        for (var propName in jsonObj) {\r\n            this[propName] = jsonObj[propName]\r\n        }\r\n    }\r\n}\r\n\r\nexport class Info extends Serializable {\r\n    public brightness?: number;\r\n    public isOn?: boolean;\r\n    public temperature?: number;\r\n    public temperatureSensorReadings?: number;\r\n    public isSecureMod?: boolean;\r\n    public mod?: number;\r\n    public isWater?: boolean;\r\n}\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./ClientApp/app/device.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\nimport { AppModule } from './app/app.module';\r\nconst platform = platformBrowserDynamic();\r\nplatform.bootstrapModule(AppModule);\r\n\r\n// для перезагузки приложения при изменениях в исходном коде\r\nif (module.hot) {\r\n    module.hot.accept();\r\n    module.hot.dispose(() => {\r\n        // Перед перезапуском приложения создаем новый элемент app, которым заменяем старый\r\n        const oldRootElem = document.querySelector('app');\r\n        const newRootElem = document.createElement('app');\r\n        oldRootElem!.parentNode!.insertBefore(newRootElem, oldRootElem);\r\n        platform.destroy();\r\n    });\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./ClientApp/main.ts","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { DeviceListComponent } from './device-list.component';\r\nimport { DeviceFormComponent } from './device-form.component';\r\nimport { DeviceCreateComponent } from './device-create.component';\r\nimport { DeviceEditComponent } from './device-edit.component';\r\nimport { NotFoundComponent } from './not-found.component';\r\nimport { DeviceListRoomComponent } from './device-list-room.component';\r\n\r\nimport { DataService } from './data.service';\r\n\r\n// определение маршрутов\r\nconst appRoutes: Routes = [\r\n    { path: '', component: DeviceListComponent },\r\n    { path: 'selectroom/:room', component: DeviceListRoomComponent },\r\n    { path: 'create', component: DeviceCreateComponent },\r\n    { path: 'edit/:id', component: DeviceEditComponent },\r\n    { path: '**', component: NotFoundComponent }\r\n];\r\n\r\n@NgModule({\r\n    imports: [BrowserModule, FormsModule, HttpClientModule, RouterModule.forRoot(appRoutes)],\r\n    declarations: [AppComponent, DeviceListComponent, DeviceCreateComponent, DeviceEditComponent,\r\n        DeviceFormComponent, NotFoundComponent, DeviceListRoomComponent],\r\n    providers: [DataService], // регистрация сервисов\r\n    bootstrap: [AppComponent]\r\n})\r\n\r\nexport class AppModule { }\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./ClientApp/app/app.module.ts","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app',\r\n    template: require('./app.component.html')\r\n})\r\nexport class AppComponent { }\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./ClientApp/app/app.component.ts","module.exports = \"<div class=\\\"container body-content\\\">\\r\\n    <router-outlet></router-outlet>\\r\\n</div>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/app.component.html\n// module id = 8\n// module chunks = 0","import { Input, Component, OnInit } from '@angular/core';\r\nimport { DataService } from './data.service';\r\nimport { Device, Info, Serializable } from './device';\r\n\r\n@Component({\r\n    template: require('./device-list.component.html'),\r\n    providers: [DataService]\r\n})\r\nexport class DeviceListComponent implements OnInit {\r\n    devices: Device[];\r\n    public test?: Info;\r\n\r\n    @Input() room: string;\r\n\r\n    constructor(private dataService: DataService) { }\r\n\r\n    ngOnInit() {\r\n        this.load();\r\n        console.log(\"ngOnInit()\", this.devices);\r\n        //    //this.devices[i].infoClass.fillFromJSON(this.devices[i].info); \r\n            \r\n        //}\r\n        //var jsonObj = JSON.parse(this.devices[0].info);\r\n        //for (var propName in jsonObj) {\r\n        //    this.test[propName] = jsonObj[propName];\r\n        //}\r\n    }\r\n\r\n\r\n    load() {\r\n        console.log(\"метод load()\");\r\n        this.dataService.getDevices().subscribe((data: Device[]) => this.devices = data);\r\n        console.log(\"this.devices\", this.devices);\r\n    }\r\n\r\n    delete(id: number) {\r\n        this.dataService.deleteDevice(id).subscribe(data => this.load());\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./ClientApp/app/device-list.component.ts","module.exports = \"<div>\\r\\n    <a routerLink=\\\"/create\\\" class=\\\"nav-link\\\">Добавить</a>\\r\\n    <a [routerLink]=\\\"['selectroom', room]\\\" class=\\\"btn btn-sm btn-primary\\\">Отсортировать по</a>\\r\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"room\\\" class=\\\"form-control\\\" />\\r\\n</div>\\r\\n\\r\\n<div *ngFor=\\\"let p of devices\\\" class=\\\"col-xs-4\\\">\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <label>Название модели</label>\\r\\n        <input class=\\\"form-control\\\" disabled name=\\\"title\\\" value={{p?.name}} />\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <label>Компания</label>\\r\\n        <input class=\\\"form-control\\\" disabled name=\\\"title\\\" value={{p?.company}} />\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <label>Категория</label>\\r\\n        <input class=\\\"form-control\\\" disabled name=\\\"title\\\" value={{p?.category}} />\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <label>Комната</label>\\r\\n        <input class=\\\"form-control\\\" name=\\\"title\\\" value={{p?.room}} />\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <label>Вкл/Выкл</label>\\r\\n        <input class=\\\"form-control\\\" type=\\\"checkbox\\\" name=\\\"title\\\" value={{p?.power}} />\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\" *ngFor=\\\"let propName of devices[0]\\\">\\r\\n        <label>Информация</label>\\r\\n        <input class=\\\"form-control\\\" name=\\\"title1\\\" value={{propName}} />\\r\\n    </div>\\r\\n    <!--<div class=\\\"form-group\\\">\\r\\n        <label>Цена</label>\\r\\n        <input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"price\\\" [(ngModel)]=\\\"price\\\" />\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <label>Производитель</label>\\r\\n        <select class=\\\"form-control\\\" name=\\\"company\\\" [(ngModel)]=\\\"company\\\">\\r\\n            <option *ngFor=\\\"let comp of companies\\\" [value]=\\\"comp\\\">\\r\\n                {{comp}}\\r\\n            </option>\\r\\n        </select>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <button class=\\\"btn btn-default\\\" (click)=\\\"addPhone(title, price, company)\\\">Добавить</button>\\r\\n    </div>-->\\r\\n</div>\\r\\n\\r\\n\\r\\n<!--<div *ngFor=\\\"let p of devices\\\" class=\\\"col-xs-4\\\">\\r\\n    <p>{{p?.name}}</p>\\r\\n    <table class=\\\"table table-striped\\\">\\r\\n        <thead>\\r\\n            <tr>\\r\\n                <td><b>Поле</b></td>\\r\\n                <td><b>Значение</b></td>\\r\\n            </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n            <tr>\\r\\n                <td>Компания</td>\\r\\n                <td>{{p?.company}}</td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n                <td>Категория</td>\\r\\n                <td>{{p?.category}}</td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n                <td>Комната</td>\\r\\n                <td>{{p?.room}}</td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n                <td>Вкл/Выкл</td>\\r\\n                <td>{{p?.power}}</td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n                <td>Информация</td>\\r\\n                <td>{{p?.info}}</td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n                <td><a [routerLink]=\\\"['edit', p.id]\\\" class=\\\"btn btn-sm btn-primary\\\">Изменить</a></td>\\r\\n                <td><button (click)=\\\"delete(p.id)\\\" class=\\\"btn btn-sm btn-danger\\\">Удалить</button></td>\\r\\n            </tr>\\r\\n        </tbody>\\r\\n    </table>\\r\\n</div>-->\\r\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/device-list.component.html\n// module id = 10\n// module chunks = 0","import { Component, Input } from '@angular/core';\r\nimport { Device } from './device';\r\n\r\n@Component({\r\n    selector: \"device-form\",\r\n    template: require('./device-form.component.html')\r\n})\r\n\r\nexport class DeviceFormComponent {\r\n    @Input() device: Device;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./ClientApp/app/device-form.component.ts","module.exports = \"<div class=\\\"form-group\\\">\\r\\n    <label>Модель</label>\\r\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"device.name\\\" class=\\\"form-control\\\" />\\r\\n</div>\\r\\n<div class=\\\"form-group\\\">\\r\\n    <label>Производитель</label>\\r\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"device.company\\\" class=\\\"form-control\\\" />\\r\\n</div>\\r\\n<div class=\\\"form-group\\\">\\r\\n    <label>Переменные</label>\\r\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"device.info\\\" class=\\\"form-control\\\" />\\r\\n</div>\\r\\n<div class=\\\"form-group\\\">\\r\\n    <label>Категория</label>\\r\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"device.category\\\" class=\\\"form-control\\\" />\\r\\n</div>\\r\\n<div class=\\\"form-group\\\">\\r\\n    <label>Комната</label>\\r\\n    <input type=\\\"text\\\" [(ngModel)]=\\\"device.room\\\" class=\\\"form-control\\\" />\\r\\n</div>\\r\\n<div class=\\\"form-group\\\">\\r\\n    <label>Вкл./Выкл.</label>\\r\\n    <input type=\\\"checkbox\\\" [(ngModel)]=\\\"device.power\\\" class=\\\"form-control\\\" />\\r\\n</div>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/device-form.component.html\n// module id = 12\n// module chunks = 0","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { DataService } from './data.service';\r\nimport { Device } from './device';\r\n\r\n@Component({\r\n    template: require('./device-create.component.html')\r\n})\r\nexport class DeviceCreateComponent {\r\n\r\n    device: Device = new Device();    // добавляемый объект\r\n    constructor(private dataService: DataService, private router: Router) { }\r\n    save() {\r\n        this.dataService.createDevice(this.device).subscribe(data => this.router.navigateByUrl(\"/\"));\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./ClientApp/app/device-create.component.ts","module.exports = \"<div>\\r\\n    <h2>Добавление нового устройства</h2>\\r\\n    <device-form [(device)]=\\\"device\\\"></device-form>\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <input type=\\\"button\\\" value=\\\"Сохранить\\\" (click)=\\\"save()\\\" class=\\\"btn btn-success\\\" />\\r\\n        <a routerLink=\\\"/\\\" class=\\\"btn btn-warning\\\">Отмена</a>\\r\\n    </div>\\r\\n</div>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/device-create.component.html\n// module id = 14\n// module chunks = 0","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { DataService } from './data.service';\r\nimport { Device } from './device';\r\n\r\n@Component({\r\n    template: require('./device-edit.component.html')\r\n})\r\n\r\nexport class DeviceEditComponent implements OnInit {\r\n\r\n    id: number;\r\n    device: Device;    // изменяемый объект\r\n    loaded: boolean = false;\r\n\r\n    constructor(private dataService: DataService, private router: Router, activeRoute: ActivatedRoute) {\r\n        this.id = Number.parseInt(activeRoute.snapshot.params[\"id\"]);\r\n    }\r\n\r\n    ngOnInit() {\r\n        if (this.id)\r\n            this.dataService.getDevice(this.id)\r\n                .subscribe((data: Device) => {\r\n                    this.device = data;\r\n                    if (this.device != null) this.loaded = true;\r\n                });\r\n    }\r\n\r\n    save() {\r\n        this.dataService.updateDevice(this.device).subscribe(data => this.router.navigateByUrl(\"/\"));\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./ClientApp/app/device-edit.component.ts","module.exports = \"<div *ngIf=\\\"loaded\\\">\\r\\n    <h2>Изменение данных о товаре</h2>\\r\\n    <device-form [(device)]=\\\"device\\\"></device-form>\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <input type=\\\"button\\\" value=\\\"Сохранить\\\" (click)=\\\"save()\\\" class=\\\"btn btn-success\\\" />\\r\\n    </div>\\r\\n</div>\\r\\n<a routerLink=\\\"/\\\" class=\\\"nav-link\\\">Назад к списку</a>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/device-edit.component.html\n// module id = 16\n// module chunks = 0","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    template: '<h2>Not Found ХУБАЛАЭА</h2>'\r\n})\r\nexport class NotFoundComponent { }\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./ClientApp/app/not-found.component.ts","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { DataService } from './data.service';\r\nimport { Device } from './device';\r\n\r\n@Component(\r\n    {\r\n        template: require('./device-list-room.component.html'),\r\n        providers: [DataService]\r\n    })\r\n\r\nexport class DeviceListRoomComponent implements OnInit {\r\n\r\n    room: string;\r\n    devices: Device[];\r\n\r\n    constructor(private dataService: DataService, private router: Router, activeRoute: ActivatedRoute) {\r\n        this.room = activeRoute.snapshot.params[\"room\"];\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.load();\r\n    }\r\n\r\n    load() {\r\n        if (this.room)\r\n            this.dataService.getDevicesSort(this.room, \"\")\r\n                .subscribe((data: Device[]) => this.devices = data);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./ClientApp/app/device-list-room.component.ts","module.exports = \"<div>\\r\\n    <a routerLink=\\\"/\\\" class=\\\"nav-link\\\">К списку моделей</a>\\r\\n</div>\\r\\n<p>Комната {{room}}</p>\\r\\n<table class=\\\"table table-striped\\\">\\r\\n    <thead>\\r\\n        <tr>\\r\\n            <td>Модель</td>\\r\\n            <td>Производитель</td>\\r\\n            <td>Комната</td>\\r\\n        </tr>\\r\\n    </thead>\\r\\n\\r\\n    <tbody>\\r\\n        <tr *ngFor=\\\"let p of devices\\\">\\r\\n            <td>{{p?.name}}</td>\\r\\n            <td>{{p?.company}}</td>\\r\\n            <td>{{p?.room}}</td>\\r\\n        </tr>\\r\\n    </tbody>\\r\\n</table>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/device-list-room.component.html\n// module id = 19\n// module chunks = 0"],"sourceRoot":""}